<?xml version="1.0"?>
<robot name="sensor_kinect" xmlns:xacro="http://ros.org/wiki/xacro" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller">
    <xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_gazebo.urdf.xacro"/>
    <xacro:include filename="$(find turtlebot_description)/urdf/turtlebot_properties.urdf.xacro"/>

    <xacro:property name="kinect_cam_py" value="-0.0125"/>
    <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
    <xacro:macro name="sensor_kinect" params="parent">
        <joint name="camera_rgb_joint" type="fixed">
            <origin xyz="${cam_px} ${kinect_cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>
            <parent link="${parent}"/>
            <child link="camera_rgb_frame" />
        </joint>
        <link name="camera_rgb_frame"/>

        <joint name="camera_rgb_optical_joint" type="fixed">
            <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
            <parent link="camera_rgb_frame" />
            <child link="camera_rgb_optical_frame" />
        </joint>
        <link name="camera_rgb_optical_frame"/>

        <joint name="camera_joint" type="fixed">
            <origin xyz="-0.031 ${-kinect_cam_py} -0.016" rpy="0 0 0"/>
            <parent link="camera_rgb_frame"/>
            <child link="camera_link"/>
        </joint>
        <link name="camera_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
                <geometry>
                    <mesh filename="package://turtlebot_description/meshes/sensors/kinect.dae"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
                <geometry>
                    <box size="0.07271 0.27794 0.073"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="0.564" />
                <origin xyz="0 0 0" />
                <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                    iyy="0.000498940" iyz="0.0"
                    izz="0.003879257" />
            </inertial>
        </link>

        <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch
         files. However, for Gazebo simulation we need them, so we add them here
         (Hence, don't publish them additionally!) -->
        <joint name="camera_depth_joint" type="fixed">
            <origin xyz="0 ${2 * -kinect_cam_py} 0" rpy="0 0 0" />
            <parent link="camera_rgb_frame" />
            <child link="camera_depth_frame" />
        </joint>
        <link name="camera_depth_frame"/>

        <joint name="camera_depth_optical_joint" type="fixed">
            <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
            <parent link="camera_depth_frame" />
            <child link="camera_depth_optical_frame" />
        </joint>
        <link name="camera_depth_optical_frame"/>

        <!-- Kinect sensor for simulation -->
        <turtlebot_sim_3dsensor/>
    </xacro:macro>
    <xacro:macro name="kinect_simulation">
        <gazebo reference="camera_link">
            <sensor:camera name="camera">
                <imageFormat>R8G8B8</imageFormat>
                <imageSize>640 480</imageSize>
                <hfov>57</hfov>
                <nearClip>0.45</nearClip>
                <farClip>5</farClip>
                <updateRate>1.0</updateRate>
                <baseline>0.2</baseline>
                <controller:gazebo_ros_openni_kinect name="kinect_camera_controller" plugin="libgazebo_ros_openni_kinect.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>1.0</updateRate>
                    <imageTopicName>/camera/image_raw</imageTopicName>
                    <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
                    <cameraInfoTopicName>/camera/camera_info</cameraInfoTopicName>
                    <frameName>openni_depth_optical_frame</frameName>
                    <distortion_k1>0.000000001</distortion_k1>
                    <distortion_k2>0.000000001</distortion_k2>
                    <distortion_k3>0.000000001</distortion_k3>
                    <distortion_t1>0.000000001</distortion_t1>
                    <distortion_t2>0.000000001</distortion_t2>
                </controller:gazebo_ros_openni_kinect>
            </sensor:camera>
        </gazebo>
    </xacro:macro>
</robot>
